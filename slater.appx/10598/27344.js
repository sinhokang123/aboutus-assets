// This file was generated by Slater.app - flow.js


// JS for Flows [Sign up & Login]

document.addEventListener('DOMContentLoaded', () => {
  // Copyright Year Auto-Update
  const currentYear = new Date().getFullYear();
  const currentYearElements = document.querySelectorAll('[data-current-year]');
  currentYearElements.forEach(currentYearElement => {
    currentYearElement.textContent = currentYear;
  });
  
  // Unicorn 
  UnicornStudio.init();
  
  // Outseta Tax Status
  // Outseta.on(
  //   'signup.registrationDataChange',
  //   registrationData => {
  //     if (registrationData.Account.TaxIdType === 'eu_vat'
  //         && registrationData.Account.TaxId) {
  //       registrationData.Account.TaxStatus = 'reverse_charge';
  //     }
  //     else {
  //       delete registrationData.Account.TaxStatus;
  //     }
  //   }
  // );
  
  // Check if the URL contains /login or /register
  if (window.location.pathname.includes('/login') || window.location.pathname.includes('/plans')) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach(() => {
        const loginWidget = document.querySelector('[data-widget-mode="login"]');
        const registerWidget = document.querySelector('[data-widget-mode="register"]');
        
        if (
          (loginWidget && loginWidget.style.display === 'none') || 
          (registerWidget && registerWidget.style.display === 'none')
        ) {
          observer.disconnect(); // Stop observing once the condition is met
          window.location.href = '/vault'; // Redirect to /vault
        }
      });
    });

    // Start observing the body for child node additions or attribute changes
    observer.observe(document.body, {
      childList: true, // Monitor for added/removed child elements
      subtree: true,   // Monitor the entire DOM subtree
      attributes: true // Detect changes in attributes (e.g., style changes)
    });
  }
  
  if (new URLSearchParams(window.location.search).get('type') === 'annual') {
    setTimeout(() => {
      const paymentTermLinks = document.querySelectorAll('.o--payment-term a');
      if (paymentTermLinks.length > 1) {
        paymentTermLinks[1].click();
      }
    }, 1000);
  }
  
  // Add event listener to elements with the `data-plausible` attribute
  document.querySelectorAll('[data-plausible]').forEach(function (element) {
    element.addEventListener('click', function () {
      var plausibleName = this.getAttribute('data-plausible');
      plausible(plausibleName); // Call the Plausible event
    });
  });
});





